<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DATANASCIMENTO_INVALIDO" xml:space="preserve">
    <value>O campo data nascimento está inválido. o formato deve ser DD/MM/AAAA</value>
  </data>
  <data name="DATANASCIMENTO_MENOS18ANOS" xml:space="preserve">
    <value>O Diretor deve ser maior que 18 anos.</value>
  </data>
  <data name="DATANASCIMENTO_VAZIO" xml:space="preserve">
    <value>O campo data de nascimento deve ser informado.</value>
  </data>
  <data name="EMAIL_EXISTENTE" xml:space="preserve">
    <value>Esse email já existe em nossa base de dados.</value>
  </data>
  <data name="EMAIL_INVALIDO" xml:space="preserve">
    <value>O campo email estar inválido.</value>
  </data>
  <data name="EMAIL_VAZIO" xml:space="preserve">
    <value>O campo email deve ser informado.</value>
  </data>
  <data name="ERRO_DESCONHECIDO" xml:space="preserve">
    <value>Erro desconhecido.</value>
  </data>
  <data name="ERRO_REGISTRAR_PROFESSOR_DIRETOR_INVALIDO" xml:space="preserve">
    <value>É necessario um Diretor valido para executar essa ação.</value>
  </data>
  <data name="LOGIN_INVALIDO" xml:space="preserve">
    <value>Login Invalido. Verifique suas credenciais.</value>
  </data>
  <data name="MATRICULA_CIDADENASCIMENTO_ALUNO_NOMAXIMO150CARACTERES" xml:space="preserve">
    <value>O campo cidade de nascimento do aluno deve conter no máximo 150 caracteres.</value>
  </data>
  <data name="MATRICULA_CIDADENASCIMENTO_ALUNO_VAZIO" xml:space="preserve">
    <value>O campo cidade de nascimento do aluno está vazia.</value>
  </data>
  <data name="MATRICULA_CIDADENASCIMENTO_RESPONSAVEL_NOMAXIMO100CARACTERES" xml:space="preserve">
    <value>O campo cidade nascimento do responsavel deve conter no máximo 20 caracteres</value>
  </data>
  <data name="MATRICULA_CIDADENASCIMENTO_RESPONSAVEL_VAZIO" xml:space="preserve">
    <value>O campo cidade de nascimento do responsavel está vazia.</value>
  </data>
  <data name="MATRICULA_CPF_RESPONSAVEL_APENAS_NUMEROS" xml:space="preserve">
    <value>O campo CPF deve conter apenas números.</value>
  </data>
  <data name="MATRICULA_CPF_RESPONSAVEL_INVALIDO" xml:space="preserve">
    <value>O CPF informado é invalido.</value>
  </data>
  <data name="MATRICULA_CPF_RESPONSAVEL_SOMENTE11NUMEROS" xml:space="preserve">
    <value>O campo CPF deve conter no minimo e no máximo 11 números.</value>
  </data>
  <data name="MATRICULA_CPF_RESPONSAVEL_VAZIO" xml:space="preserve">
    <value>O campo CPF deve ser informado.</value>
  </data>
  <data name="MATRICULA_DATAINICIO_MAIOR_OU_IGUAL_DATATERMINIO" xml:space="preserve">
    <value>A data de inicio é maior ou igual a data de terminio.</value>
  </data>
  <data name="MATRICULA_DATA_INICIO_INVALIDO" xml:space="preserve">
    <value>O campo data inicio está inválido. o formato deve ser DD/MM/AAAA</value>
  </data>
  <data name="MATRICULA_DATA_INICIO_VAZIO" xml:space="preserve">
    <value>O campo data de inicio deve ser informado.</value>
  </data>
  <data name="MATRICULA_DATA_NASCIMENTO_RESPONSAVEL_INVALIDO" xml:space="preserve">
    <value>O campo data nascimento do responsavel estar invalido.</value>
  </data>
  <data name="MATRICULA_DATA_NASCIMENTO_RESPONSAVEL_VAZIO" xml:space="preserve">
    <value>O campo data nascimento do responsavel deve ser informado.</value>
  </data>
  <data name="MATRICULA_DATA_TERMINIO_INVALIDO" xml:space="preserve">
    <value>O campo data términio está inválido. o formato deve ser DD/MM/AAAA</value>
  </data>
  <data name="MATRICULA_DATA_TERMINIO_VAZIO" xml:space="preserve">
    <value>O campo data de términio deve ser informado.</value>
  </data>
  <data name="MATRICULA_NOMECOMPLETO_RESPONSAVEL_NOMAXIMO200CARACTERES" xml:space="preserve">
    <value>O campo nome completo do responsavel deve conter no máximo 20 caracteres</value>
  </data>
  <data name="MATRICULA_NOMECOMPLETO_RESPONSAVEL_VAZIO" xml:space="preserve">
    <value>O campo nome completo do responsavel deve ser informado.</value>
  </data>
  <data name="MATRICULA_TELEFONE_RESPONSAVEL_INVALIDO" xml:space="preserve">
    <value>O telefone do responsavel deve estar no formato XX X XXXX-XXXX</value>
  </data>
  <data name="MATRICULA_TELEFONE_RESPONSAVEL_VAZIO" xml:space="preserve">
    <value>O campo telefone do responsavel deve ser informado.</value>
  </data>
  <data name="NOMECOMPLETO_MAXIMO200CARACTERES" xml:space="preserve">
    <value>O campo nome só pode conter 200 caracteres.</value>
  </data>
  <data name="NOMECOMPLETO_VAZIO" xml:space="preserve">
    <value>O campo nome completo deve ser informado.</value>
  </data>
  <data name="PROFESSORA_NAO_ENCONTRADA" xml:space="preserve">
    <value>Professora não foi encontrada.</value>
  </data>
  <data name="REGISTRAR_ALUNO_SUCESSO" xml:space="preserve">
    <value>Aluno registrado com sucesso !</value>
  </data>
  <data name="REGISTRAR_PROFESSORA_SUCESSO" xml:space="preserve">
    <value>Professora registrado com sucesso !</value>
  </data>
  <data name="SENHAATUAL_INVALIDA" xml:space="preserve">
    <value>A Senha atual está inválida.</value>
  </data>
  <data name="SENHA_MINIMO_SEIS_CARACTERES" xml:space="preserve">
    <value>A senha deve conter no minimo 6 caracteres.</value>
  </data>
  <data name="SENHA_VAZIA" xml:space="preserve">
    <value>O campo senha deve ser informado.</value>
  </data>
  <data name="SERIE_INEXISTENTE" xml:space="preserve">
    <value>Essa serie não existe em nossa escola.</value>
  </data>
  <data name="TOKEN_EXPIRADO" xml:space="preserve">
    <value>Token Expirado !!</value>
  </data>
  <data name="TURMA_INEXISTENTE" xml:space="preserve">
    <value>A turma informada não existe.</value>
  </data>
  <data name="TURMA_NOME_TURMA_NOMAXIMO50CARACTERES" xml:space="preserve">
    <value>O campo sala deve conter no máximo 50 caracteres.</value>
  </data>
  <data name="TURMA_NOME_TURMA_VAZIO" xml:space="preserve">
    <value>O campo nome da turma deve ser informado.</value>
  </data>
  <data name="TURMA_SALA_NOMAXIMO50CARACTERES" xml:space="preserve">
    <value>O campo sala deve conter no máximo 50 caracteres.</value>
  </data>
  <data name="TURMA_SALA_VAZIA" xml:space="preserve">
    <value>O campo sala deve ser informado.</value>
  </data>
  <data name="TURNO_INEXISTENTE" xml:space="preserve">
    <value>Esse turno não existe.</value>
  </data>
  <data name="USUARIO_NAO_AUTORIZADO" xml:space="preserve">
    <value>Esse usuario não está autorizado realizar essa ação !!</value>
  </data>
</root>